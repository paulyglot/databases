1.Write out a generic SELECT statement.

SELECT launchDate, orbit
FROM satellites 
WHERE orbit LIKE '%Delta%'
OR launchDate = 2018;

2.Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
 SELECT FROM WHERE LIKE AND OR NOT  (SFWL AON = Safe From White Lions Above Our Noggins)
 
3.Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

Display the name, gender, and age of all dogs that are part Labrador.
SELECT name, gender, age 
FROM dogs
WHERE breed LIKE '%labrador%'

Display the ids of all dogs that are under 1 year old.
SELECT id 
FROM dogs
WHERE age < 1

Display the name and age of all dogs that are female and over 35lbs.
SELECT name, age
FROM dogs
WHERE gender='F' 
AND weight > 35

Display all of the information about all dogs that are not Shepherd mixes.
SELECT * 
FROM dogs
WHERE breed NOT LIKE '%shepherd%'

Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
SELECT id, age, weight, breed
FROM dogs
WHERE weight > 60 
OR breed LiKE '%dane%'

4.Given this cats table, what records are returned from these queries?

SELECT name, adoption_date FROM cats;
name	adoption_date
Mushi	2016-03-22T00:00:00.000Z
Seashell	null
Azul	2016-04-17T00:00:00.000Z
Victoire	2016-09-01T00:00:00.000Z
Nala	null

SELECT name, age FROM cats;
name	age
Mushi	1
Seashell	7
Azul	3
Victoire	7
Nala	1

5.From the cats table, write queries to select the following pieces of data.

Display all the information about all of the available cats.
SELECT *
FROM cats
WHERE adoption_date IS NULL

Display the name and sex of all cats who are 7 years old.
SELECT name, gender
FROM cats 
WHERE age=7

Find all of the names of the cats, so you don’t choose duplicate names for new cats.
SELECT name
FROM cats 

6.List each comparison operator and explain when you would use it. Include a real world example for each.
> greater than to compare 2 values, finding dogs age
< less than to compare 2 values, finding dogs age 
= equal to, to compare 2 values, when finding title of book 
<= less than or equal to, to compare 2 values, searching flight times less than or equal to certain time 
>= greater than or equal to, to compare 2 values, comparing grades where you're looking for equal grades or higher
!= not equal to, to compare 2 values, used to find gender of dogs that are not female, but male
<> greather than or less than, to compare to values, this is equivalent to !=, so to find a book genre not equal to horror genre 
LIKE pattern match a string, used to find book containing the word 'Apollo' in it 
BETWEEN find value(s) between two values, find all president election between the dates of 1920 to 2018
IS DISTINCT FROM is like <> except used when a null value could be input, used for finding adoption dates of cats when some of dates could be null 
IS TRUE/ IS FALSE determining whether value true or false if possible null value, determine whether pet was adopted 
IS NULL determines if cell contents are null, can also be used in conjuction with NOT, search wther a books availability IS NOT NULL or IS NULL 
AND requires both expressions to be true for row to be returned, can further specify a search for a book by searching where ... AND ...
OR requires one of expressions to be true for row to be returned, search whether a student passed a TOFL exam or is already english language proficient native speaker 
NOT requries expression to be false for row to be returned, example is someone is NOT female and should be male 

7.From the cats table, what data is returned from these queries?
SELECT name FROM cats WHERE gender = ‘F’;
name
Seashell
Nala

SELECT name FROM cats WHERE age <> 3;
name
Mushi
Seashell
Victoire
Nala

SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;

id
3
4


















